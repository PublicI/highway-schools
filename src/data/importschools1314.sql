CREATE DATABASE carbonwars;

CREATE TABLE schools1314 ("survyear" varchar, "ncessch" varchar, "fipst" varchar, "leaid" varchar, "schno" varchar, "stid" varchar, "seasch" varchar, "leanm" varchar, "schnam" varchar, "phone" varchar, "mstree" varchar, "mcity" varchar, "mstate" varchar, "mzip" varchar, "mzip4" varchar, "lstree" varchar, "lcity" varchar, "lstate" varchar, "lzip" varchar, "lzip4" varchar, "type" varchar, "status" varchar, "union" varchar, "ulocal" varchar, "latcod" varchar, "loncod" varchar, "conum" varchar, "coname" varchar, "cdcode" varchar, "bies" varchar, "reconsty" varchar, "reconstf" varchar, "fte" varchar, "gslo" varchar, "gshi" varchar, "pkoffrd" varchar, "kgoffrd" varchar, "g01offrd" varchar, "g02offrd" varchar, "g03offrd" varchar, "g04offrd" varchar, "g05offrd" varchar, "g06offrd" varchar, "g07offrd" varchar, "g08offrd" varchar, "g09offrd" varchar, "g10offrd" varchar, "g11offrd" varchar, "g12offrd" varchar, "ugoffrd" varchar, "level" varchar, "titleistat" varchar, "titlei" varchar, "stitli" varchar, "magnet" varchar, "chartr" varchar, "shared" varchar, "frelch" varchar, "redlch" varchar, "totfrl" varchar, "pk" varchar, "ampkm" varchar, "ampkf" varchar, "aspkm" varchar, "aspkf" varchar, "hipkm" varchar, "hipkf" varchar, "blpkm" varchar, "blpkf" varchar, "whpkm" varchar, "whpkf" varchar, "hppkm" varchar, "hppkf" varchar, "trpkm" varchar, "trpkf" varchar, "kg" varchar, "amkgm" varchar, "amkgf" varchar, "askgm" varchar, "askgf" varchar, "hikgm" varchar, "hikgf" varchar, "blkgm" varchar, "blkgf" varchar, "whkgm" varchar, "whkgf" varchar, "hpkgm" varchar, "hpkgf" varchar, "trkgm" varchar, "trkgf" varchar, "g01" varchar, "am01m" varchar, "am01f" varchar, "as01m" varchar, "as01f" varchar, "hi01m" varchar, "hi01f" varchar, "bl01m" varchar, "bl01f" varchar, "wh01m" varchar, "wh01f" varchar, "hp01m" varchar, "hp01f" varchar, "tr01m" varchar, "tr01f" varchar, "g02" varchar, "am02m" varchar, "am02f" varchar, "as02m" varchar, "as02f" varchar, "hi02m" varchar, "hi02f" varchar, "bl02m" varchar, "bl02f" varchar, "wh02m" varchar, "wh02f" varchar, "hp02m" varchar, "hp02f" varchar, "tr02m" varchar, "tr02f" varchar, "g03" varchar, "am03m" varchar, "am03f" varchar, "as03m" varchar, "as03f" varchar, "hi03m" varchar, "hi03f" varchar, "bl03m" varchar, "bl03f" varchar, "wh03m" varchar, "wh03f" varchar, "hp03m" varchar, "hp03f" varchar, "tr03m" varchar, "tr03f" varchar, "g04" varchar, "am04m" varchar, "am04f" varchar, "as04m" varchar, "as04f" varchar, "hi04m" varchar, "hi04f" varchar, "bl04m" varchar, "bl04f" varchar, "wh04m" varchar, "wh04f" varchar, "hp04m" varchar, "hp04f" varchar, "tr04m" varchar, "tr04f" varchar, "g05" varchar, "am05m" varchar, "am05f" varchar, "as05m" varchar, "as05f" varchar, "hi05m" varchar, "hi05f" varchar, "bl05m" varchar, "bl05f" varchar, "wh05m" varchar, "wh05f" varchar, "hp05m" varchar, "hp05f" varchar, "tr05m" varchar, "tr05f" varchar, "g06" varchar, "am06m" varchar, "am06f" varchar, "as06m" varchar, "as06f" varchar, "hi06m" varchar, "hi06f" varchar, "bl06m" varchar, "bl06f" varchar, "wh06m" varchar, "wh06f" varchar, "hp06m" varchar, "hp06f" varchar, "tr06m" varchar, "tr06f" varchar, "g07" varchar, "am07m" varchar, "am07f" varchar, "as07m" varchar, "as07f" varchar, "hi07m" varchar, "hi07f" varchar, "bl07m" varchar, "bl07f" varchar, "wh07m" varchar, "wh07f" varchar, "hp07m" varchar, "hp07f" varchar, "tr07m" varchar, "tr07f" varchar, "g08" varchar, "am08m" varchar, "am08f" varchar, "as08m" varchar, "as08f" varchar, "hi08m" varchar, "hi08f" varchar, "bl08m" varchar, "bl08f" varchar, "wh08m" varchar, "wh08f" varchar, "hp08m" varchar, "hp08f" varchar, "tr08m" varchar, "tr08f" varchar, "g09" varchar, "am09m" varchar, "am09f" varchar, "as09m" varchar, "as09f" varchar, "hi09m" varchar, "hi09f" varchar, "bl09m" varchar, "bl09f" varchar, "wh09m" varchar, "wh09f" varchar, "hp09m" varchar, "hp09f" varchar, "tr09m" varchar, "tr09f" varchar, "g10" varchar, "am10m" varchar, "am10f" varchar, "as10m" varchar, "as10f" varchar, "hi10m" varchar, "hi10f" varchar, "bl10m" varchar, "bl10f" varchar, "wh10m" varchar, "wh10f" varchar, "hp10m" varchar, "hp10f" varchar, "tr10m" varchar, "tr10f" varchar, "g11" varchar, "am11m" varchar, "am11f" varchar, "as11m" varchar, "as11f" varchar, "hi11m" varchar, "hi11f" varchar, "bl11m" varchar, "bl11f" varchar, "wh11m" varchar, "wh11f" varchar, "hp11m" varchar, "hp11f" varchar, "tr11m" varchar, "tr11f" varchar, "g12" varchar, "am12m" varchar, "am12f" varchar, "as12m" varchar, "as12f" varchar, "hi12m" varchar, "hi12f" varchar, "bl12m" varchar, "bl12f" varchar, "wh12m" varchar, "wh12f" varchar, "hp12m" varchar, "hp12f" varchar, "tr12m" varchar, "tr12f" varchar, "ug" varchar, "amugm" varchar, "amugf" varchar, "asugm" varchar, "asugf" varchar, "hiugm" varchar, "hiugf" varchar, "blugm" varchar, "blugf" varchar, "whugm" varchar, "whugf" varchar, "hpugm" varchar, "hpugf" varchar, "trugm" varchar, "trugf" varchar, "member" varchar, "am" varchar, "amalm" varchar, "amalf" varchar, "asian" varchar, "asalm" varchar, "asalf" varchar, "hisp" varchar, "hialm" varchar, "hialf" varchar, "black" varchar, "blalm" varchar, "blalf" varchar, "white" varchar, "whalm" varchar, "whalf" varchar, "pacific" varchar, "hpalm" varchar, "hpalf" varchar, "tr" varchar, "tralm" varchar, "tralf" varchar, "toteth" varchar, "virtualstat" varchar, "nslpstatus" varchar, "chartauth1" varchar, "chartauth2" varchar);

COPY schools1314
FROM '/Users/cskees/Desktop/highwayschools/src/data/schools1314.txt';

DELETE
FROM schools1314
WHERE survyear = 'SURVYEAR';

CREATE EXTENSION postgis;

ALTER TABLE schools1314 ADD COLUMN geom geography(Point,4326);

UPDATE schools1314
SET geom = ST_SetSRID(ST_MakePoint(cast(loncod AS double PRECISION),cast(latcod AS double PRECISION)),4326);

CREATE INDEX ON schools1314 USING GIST (geom);

ALTER TABLE roads
ALTER COLUMN geom TYPE geography(multilinestring);

SELECT ncessch, schnam, recid, route_id, lname, fclass, ST_Distance(schools1314.geom,roads.geom) as distance, latcod as latitude, loncod as longitude, schools1314.geom INTO schoolsnearroads FROM schools1314, roads WHERE ST_DWithin(roads.geom, schools1314.geom, 500);

select distinct on (ncessch) ncessch, schnam, recid, route_id, lname, fclass, distance, latitude, longitude into schoolsnearroadsdistinct from schoolsnearroads order by ncessch, distance;

\copy schoolsnearroadsdistinct to '/Users/cskees/Desktop/highwayschools/src/data/schoolsnearroadsv2.csv' with CSV HEADER;

alter table schoolsnearroads alter column geom type geometry(point) USING geom::geometry(Point);

ALTER TABLE roadswithtraffic ALTER COLUMN geom TYPE geography(multilinestring);

SELECT ncessch, schnam, leanm, member, white, totfrl, lstree, lcity, lstate, lzip, coname, type, status, level, latcod as latitude, loncod as longitude, id, route_id, state_code, through_la, f_system_v, aadt_vn, ST_Distance(schools1314.geom,roadswithtraffic.geom) as distance, schools1314.geom INTO schoolsnearroads FROM schools1314, roadswithtraffic WHERE ST_DWithin(roadswithtraffic.geom, schools1314.geom, 500);

select distinct on (ncessch) * into schoolsnearroadsdistinct from schoolsnearroads order by ncessch, aadt_vn DESC NULLS LAST, through_la DESC NULLS LAST, f_system_v ASC NULLS LAST, distance ASC NULLS LAST;